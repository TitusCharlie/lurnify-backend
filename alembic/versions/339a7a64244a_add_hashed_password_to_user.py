"""add hashed_password to user

Revision ID: 339a7a64244a
Revises: 
Create Date: 2025-09-03 21:52:05.799828

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '339a7a64244a'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_membership_id'), table_name='membership')
    op.drop_table('membership')
    op.drop_index(op.f('ix_post_id'), table_name='post')
    op.drop_table('post')
    op.drop_index(op.f('ix_community_id'), table_name='community')
    op.drop_table('community')
    op.alter_column('course', 'author_id',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.add_column('lesson', sa.Column('updated_at', sa.DateTime(), nullable=False))
    op.drop_index(op.f('ix_lesson_creator_id'), table_name='lesson')
    op.drop_index(op.f('ix_lesson_module_id'), table_name='lesson')
    op.create_index(op.f('ix_lesson_id'), 'lesson', ['id'], unique=False)
    op.create_index(op.f('ix_module_id'), 'module', ['id'], unique=False)
    op.add_column('user', sa.Column('hashed_password', sa.String(), nullable=True))
    op.add_column('user', sa.Column('social_provider', sa.String(), nullable=True))
    op.add_column('user', sa.Column('social_id', sa.String(), nullable=True))
    op.add_column('user', sa.Column('nonce', sa.String(), nullable=True))
    op.add_column('user', sa.Column('updated_at', sa.DateTime(), nullable=False))
    op.alter_column('user', 'email',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.create_index(op.f('ix_user_id'), 'user', ['id'], unique=False)
    op.drop_column('user', 'password_hash')
    op.drop_column('user', 'username')
    op.drop_column('user', 'auth_provider')
    op.drop_column('user', 'full_name')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('user', sa.Column('full_name', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('user', sa.Column('auth_provider', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('user', sa.Column('username', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('user', sa.Column('password_hash', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_user_id'), table_name='user')
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=False)
    op.alter_column('user', 'email',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.drop_column('user', 'updated_at')
    op.drop_column('user', 'nonce')
    op.drop_column('user', 'social_id')
    op.drop_column('user', 'social_provider')
    op.drop_column('user', 'hashed_password')
    op.drop_index(op.f('ix_module_id'), table_name='module')
    op.drop_index(op.f('ix_lesson_id'), table_name='lesson')
    op.create_index(op.f('ix_lesson_module_id'), 'lesson', ['module_id'], unique=False)
    op.create_index(op.f('ix_lesson_creator_id'), 'lesson', ['creator_id'], unique=False)
    op.drop_column('lesson', 'updated_at')
    op.alter_column('course', 'author_id',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.create_table('community',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('creator_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['creator_id'], ['user.id'], name='community_creator_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='community_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index(op.f('ix_community_id'), 'community', ['id'], unique=False)
    op.create_table('post',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('content', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('community_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['community_id'], ['community.id'], name=op.f('post_community_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('post_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('post_pkey'))
    )
    op.create_index(op.f('ix_post_id'), 'post', ['id'], unique=False)
    op.create_table('membership',
    sa.Column('id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('community_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('joined_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['community_id'], ['community.id'], name=op.f('membership_community_id_fkey')),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], name=op.f('membership_user_id_fkey')),
    sa.PrimaryKeyConstraint('id', name=op.f('membership_pkey'))
    )
    op.create_index(op.f('ix_membership_id'), 'membership', ['id'], unique=False)
    # ### end Alembic commands ###
